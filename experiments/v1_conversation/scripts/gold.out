[2024-06-29 22:02:25,830][root][INFO] - {'prompts': 'data/original_prompts/human_assistant_instruct.json', 'users': 'data/users/users.json', 'start_prompts': 5000, 'end_prompts': 10250, 'n_users': 20, 'save_file': 'data/gold_responses/gold_responses_5000_10250_prompts_20_users.json', 'model_config': {'model': 'meta-llama/Meta-Llama-3-8B-Instruct', 'download_dir': '/scr/jphilipp/stargate/pretrained_models/Meta-Llama-3-8B-Instruct', 'dtype': 'auto', 'quantization': None, 'tensor_parallel_size': 1}, 'generation_config': {'max_new_tokens': 2048, 'num_return_sequences': 1, 'temperature': 0.0}}
INFO 06-29 22:02:25 llm_engine.py:79] Initializing an LLM engine with config: model='meta-llama/Meta-Llama-3-8B-Instruct', tokenizer='meta-llama/Meta-Llama-3-8B-Instruct', tokenizer_mode=auto, revision=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=8192, download_dir='/scr/jphilipp/stargate/pretrained_models/Meta-Llama-3-8B-Instruct', load_format=auto, tensor_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, device_config=cuda, seed=0)
INFO 06-29 22:02:28 weight_utils.py:163] Using model weights format ['*.safetensors']
INFO 06-29 22:02:32 llm_engine.py:337] # GPU blocks: 27885, # CPU blocks: 2048
INFO 06-29 22:02:34 model_runner.py:666] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 06-29 22:02:34 model_runner.py:670] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 06-29 22:02:37 model_runner.py:738] Graph capturing finished in 3 secs.
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
[2024-06-29 22:02:40,754][root][INFO] - 105000
