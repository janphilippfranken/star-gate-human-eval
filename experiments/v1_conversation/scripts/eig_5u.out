[2024-08-17 01:03:39,512][root][INFO] - Computing EIG.
Saving to: data/expected_info_gain/eig_5_user_10k.json
N Users Per Prompt: 5
INFO 08-17 01:03:39 llm_engine.py:174] Initializing an LLM engine (v0.5.4) with config: model='meta-llama/Meta-Llama-3-8B-Instruct', speculative_config=None, tokenizer='meta-llama/Meta-Llama-3-8B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=8192, download_dir='/scr/jphilipp/stargate/pretrained_models/Meta-Llama-3-8B-Instruct', load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None), seed=0, served_model_name=meta-llama/Meta-Llama-3-8B-Instruct, use_v2_block_manager=False, enable_prefix_caching=False)
INFO 08-17 01:03:40 model_runner.py:720] Starting to load model meta-llama/Meta-Llama-3-8B-Instruct...
INFO 08-17 01:03:40 weight_utils.py:225] Using model weights format ['*.safetensors']
INFO 08-17 01:03:43 model_runner.py:732] Loading model weights took 14.9595 GB
INFO 08-17 01:03:44 gpu_executor.py:102] # GPU blocks: 27961, # CPU blocks: 2048
INFO 08-17 01:03:46 model_runner.py:1024] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 08-17 01:03:46 model_runner.py:1028] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 08-17 01:03:54 model_runner.py:1225] Graph capturing finished in 9 secs.
